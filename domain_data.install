<?php

/**
 * @file
 * Install, update and uninstall functions for the Domain Data module.
 */

/**
 * Implements hook_install().
 */
function domain_data_install() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_uninstall().
 */
function domain_data_uninstall() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_schema().
 */
function domain_data_schema() {
  $schema['domain_data'] = [
    'description' => 'Table description.',
    'fields' => [
      'domain' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Select domain from Domain modules',
      ],
      'office_boolean' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Availability of a physical office',
      ],
      'base_domain' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Checked if this domain base',
      ],
      'region' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Region of country',
      ],
      'city' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Address of office',
      ],
      'street' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Address of office',
      ],
      'build' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Build of office',
      ],
      'postal_code' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Postal code',
      ],
      'descriptor' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Descriptor address',
      ],
      'longitude' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Longitude',
      ],
      'latitude' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Latitude',
      ],
      'work_time' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Work time',
      ],
      'bus_stop' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Bus stop',
      ],
      'bus_route' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Bus route',
      ],
      'phone' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Phone',
      ],
      'phone_second' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Phone second',
      ],
      'email' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => 'info@mail.ru',
        'description' => 'Email',
      ],
      'tg' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'tg',
      ],
      'whatsapp' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Whatsapp',
      ],
    ],
    'primary key' => ['domain'],
  ];
  return $schema;
}

/**
 * Implements hook_requirements().
 */
function domain_data_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $value = mt_rand(0, 100);
    $requirements['domain_data_status'] = [
      'title' => t('Domain Data status'),
      'value' => t('Domain Data value: @value', ['@value' => $value]),
      'severity' => $value > 50 ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
    ];
  }

  return $requirements;
}
